# Host root
host=Der Root-Knoten des Management-Modells auf der Host-Ebene.
host.add=F\u00FCgen Sie einen Host-Controller mit einer leeren Host-Konfiguration hinzu.
host.host=Ein Host
host.host-state=Der derzeitige Status des Host-Prozesses
host.runtime-configuration-state=Der aktuelle, persistente Konfigurationsstatus, entweder starting, ok, reload-required, restart-required, stopping oder stopped.
host.name=Der Name f\u00FCr den Host-Controller dieses Hosts. Falls nicht festgelegt, wird standardm\u00E4\u00DFig der Laufzeitwert von InetAddress.getLocalHost().getHostName() verwendet.
host.release-version=Die Version der WildFly Core Release, die auf diesem Host-Controller l\u00E4uft.
host.release-codename=Der Codename der WildFly Core Release, die auf diesem Host-Controller l\u00E4uft.
host.product-name=Der Name des auf WildFly Core basierenden Produkts, das auf diesem Host-Controller ausgef\u00FChrt wird.
host.product-version=Die Version der auf WildFly Core basierenden Produkt-Release, die auf diesem Host-Controller ausgef\u00FChrt wird.
host.management-major-version=Die Hauptversion des WildFly Core Kernel-Management-Interface, das auf diesem Host-Controller bereitgestellt wird.
host.management-minor-version=Die Nebenversion des WildFly Core Kernel-Management-Interface, das auf diesem Host-Controller bereitgestellt wird.
host.management-micro-version=Die Micro-Version des WildFly Core Kernel-Management-Interface, das auf diesem Host-Controller bereitgestellt wird.
host.running-mode=Der derzeitige Ausf\u00FChrungsmodus des Host Controllers. Entweder NORMAL (normaler Betrieb) oder ADMIN_ONLY. Ein ADMIN_ONLY-Server startet s\u00E4mtliche konfigurierten Verwaltungsoberfl\u00E4chen und akzeptiert Verwaltungsanfragen, startet jedoch keine Server und akzeptiert, falls dieser Host Controller der prim\u00E4re Host Controller f\u00FCr die Domain ist, keine eingehenden Verbindungen von sekund\u00E4ren Host Controllern.
host.suspend-state=Der Anhalten-Status des Hosts
host.uuid=Eindeutige ID dieser Serverinstanz.
host.organization=Hinweis auf die aktuelle Organisation, zu der diese Host-Controller geh\u00F6rt.
host.domain-organization=Hinweis auf die aktuelle Organisation, zu der dieser Host geh\u00F6rt.
host.management=Die Konfiguration des Managementsystems des Hosts.
host.management.interface=Interface, an dem das Socket des Host-Controllers f\u00FCr Intradomain-Management-Kommunikation ge\u00F6ffnet werden sollte.
host.directory-grouping=Beschreibt, wie schreibbare Verzeichnisse f\u00FCr Server, die von diesem Host-Controller gesteuert werden, organisiert werden sollen. Der Standardwert 'by-server' zeigt an, dass die schreibbaren Verzeichnisse eines jeden Servers unter dem Namen des Servers in dem Domain-/Server-Verzeichnis gruppiert werden sollen. Die Alternative 'by-type' zeigt an, dass die schreibbaren Verzeichnisse eines jeden Servers nach deren Typ (z.B. "data", "log", "tmp") mit Verzeichnissen eines gegebenen Typs f\u00FCr alle Server gruppiert werden sollen, die im Domainlevel-Verzeichnis f\u00FCr diesen Typ erscheinen, z.B. domain/data/servers/server-name.
host.management.port=Port, an dem das Socket des Host-Controllers f\u00FCr Intradomain-Management-Kommunikation ge\u00F6ffnet werden sollte.
host.domain-controller=Konfiguration der Weise, wie der Host mit dem Domain-Controller interagieren soll
host.is-domain-controller=Gibt an, ob es sich bei diesem Host um einen Domain-Controller handelt oder ob ein Remote-Domain-Controller konfiguriert werden soll.
host.is-domain-controller.deprecated=Verwenden Sie das Schreibattribut, um das Domain-Controller-Attribut des Host-Controllers zu konfigurieren.
host.domain-controller.local=Konfigurieren eines lokalen Domain-Controllers
host.write-local-domain-controller=Konfiguriert den Host, um als Domain-Controller zu fungieren
host.write-local-domain-controller.deprecated=Einfaches write-attribute verwenden zum Bearbeiten des Domain-Controllers.
host.remove-local-domain-controller=Entfernt den lokalen Domain-Controller
host.domain-controller.remote=Konfiguration der Remote Domain-Controller-Verbindung
host.write-remote-domain-controller=F\u00FCgt eine Konfiguration f\u00FCr eine Remote Domain-Controller-Verbindung hinzu
host.write-remote-domain-controller.deprecated=Einfaches write-attribute verwenden zum Bearbeiten des Domain-Controllers.
host.write-remote-domain-controller.host=Die f\u00FCr die Domain-Controller-Verbindung zu verwendende Adresse
host.write-remote-domain-controller.ignore-unused-configuration=Auf "true" setzen, um den Domain-Controller anzuweisen, automatisch keine Konfigurationen und Operationen f\u00FCr Profile, Socket-Binding-Gruppen und Server-Gruppen weiterzuleiten, die unsere Server nicht betreffen. Falls nicht definiert, ist das Standardverhalten "true", sofern der Prozess nicht mit dem Befehlszeilenparameter "--backup" gestartet wurde, der das Standardverhalten in "false" \u00E4ndert.
host.write-remote-domain-controller.port=Der f\u00FCr die Domain-Controller-Verbindung zu verwendende Port
host.write-remote-domain-controller.protocol=Das f\u00FCr die Domain-Controller-Verbindung zu verwendende Protokoll
host.write-remote-domain-controller.authentication-context=F\u00FCr die ausgehende Sicherheitskonfiguration zu verwendender Authentifizierungskontext
host.write-remote-domain-controller.username=Der Benutzername, der f\u00FCr diesen Host zu verwenden ist, wenn er den Domain-Controller veriifiziert. Wenn nicht definiert, wird der Hostname verwendet. Das Festlegen dieses Attributs macht es m\u00F6glich, die Einrichtung separater Anmeldedaten f\u00FCr jeden Host in einer Domain zu vermeiden.
host.write-remote-domain-controller.username.deprecated=Stattdessen sollte ein Authentifizierungskontext referenziert werden.
host.write-remote-domain-controller.security-realm=Name des Legacy-Sicherheitsbereichs, aus dem die Host-Anmeldedaten f\u00FCr die Authentifizierung beim Domain-Controller abgerufen werden sollen.
host.write-remote-domain-controller.security-realm.deprecated=Stattdessen sollte ein Authentifizierungskontext referenziert werden.
host.write-remote-domain-controller.admin-only-policy=Name der Richtlinie, die steuert, wie ein sekund\u00E4rer Host Controller, der im 'admin-only' Modus und ohne Verwendung der '--cached-dc' Startup-Option gestartet wurde, mit dem Fehlen einer lokalen Kopie der Domain-weiten Konfiguration umgehen sollte.
host.remove-remote-domain-controller=Entfernt eine Remote Domain-Controller-Anschluss-Konfiguration
host.domain-controller.host=Die f\u00FCr die Domain-Controller-Verbindung zu verwendende Adresse
host.domain-controller.ignore-unused-configuration=Auf "true" setzen, um den Domain-Controller anzuweisen, automatisch keine Konfigurationen und Operationen f\u00FCr Profile, Socket-Binding-Gruppen und Server-Gruppen weiterzuleiten, die unsere Server nicht betreffen. Falls nicht definiert, ist das Standardverhalten "true", sofern der Prozess nicht mit dem Befehlszeilenparameter "--backup" gestartet wurde, der das Standardverhalten in "false" \u00E4ndert.
host.domain-controller.port=Der f\u00FCr die Domain-Controller-Verbindung zu verwendende Port
host.domain-controller.protocol=Das f\u00FCr die Domain-Controller-Verbindung zu verwendende Protokoll
host.domain-controller.authentication-context=F\u00FCr die ausgehende Sicherheitskonfiguration zu verwendender Authentifizierungskontext
host.domain-controller.username=Der Benutzername, der f\u00FCr diesen Host zu verwenden ist, wenn er den Domain-Controller veriifiziert. Wenn nicht definiert, wird der Hostname verwendet. Das Festlegen dieses Attributs macht es m\u00F6glich, die Einrichtung separater Anmeldedaten f\u00FCr jeden Host in einer Domain zu vermeiden.
host.domain-controller.username.deprecated=Stattdessen sollte ein Authentifizierungskontext referenziert werden.
host.domain-controller.security-realm=Name des Legacy-Sicherheitsbereichs, aus dem die Host-Anmeldedaten f\u00FCr die Authentifizierung beim Domain-Controller abgerufen werden sollen.
host.domain-controller.security-realm.deprecated=Stattdessen sollte ein Authentifizierungskontext referenziert werden.
host.domain-controller.admin-only-policy=Name der Richtlinie, die steuert, wie ein sekund\u00E4rer Host Controller, der im 'admin-only' Modus und ohne Verwendung der '--cached-dc' Startup-Option gestartet wurde, mit dem Fehlen einer lokalen Kopie der Domain-weiten Konfiguration umgehen sollte.
host.domain-controller.remove=Entfernt eine Remote Domain-Controller-Anschluss-Konfiguration
host.namespaces=Map von im Konfigurations-XML-Dokument verwendeten Namespaces, wobei Schl\u00FCssel Namespace-Pr\u00E4fixe und Werte Schema-URIs sind.
host.schema-locations=Map von im Konfigurations-XML-Dokument verwendeten Speicherorten, wobei Schl\u00FCssel Schema-URIs und Werte die Speicherorte sind, an denen sich die Schema befindet.
# end workaround
host.server-state=Der Status eines Prozesses
host.extension=Eine Liste von Erweiterungsmodulen.
host.subsystem=Auf dem Host auszuf\u00FChrende Untersysteme. Auf dem Host direkt definierte Untersysteme m\u00FCssen a) die Installation auf einem Host erlauben b) durch ein Erweiterungsmodul auf dem Host initialisiert werden.
host.path=Eine Liste benannter Dateisystempfade.
host.persist-name=Wenn auf "true" gesetzt, wird der Name des Host-Controllers in die Host-Konfigurationsdatei geschrieben. Der Standardwert ist "false" und der Name wird nicht beibehalten.
host.interface=Eine Liste der voll spezifizierten Netzwerk-Interfaces, die auf dem Host zur Verf\u00FCgung stehen.
host.jvm=Eine Liste von Java Virtual Machine Konfigurationen, die auf Server auf dem Host angewendet werden k\u00F6nnen.
host.system-properties=Eine Liste der auf allen Servern auf dem Host einzustellenden Systemeigenschaften.
host.core-services=Vom Host-Controller des Hosts bereitgestellte Kerndienste.
host.system-property=Eine auf allen Servern am Host einzustellende Systemeigenschaft.
host.core-service=Vom Host-Controller des Hosts bereitgestellte Kerndienste.
host.server-config=Konfigurationen auf Host-Ebene f\u00FCr die Server, die auf diesem Host laufen k\u00F6nnen.
host.server=Aktuell am Host laufende Server
host.socket-binding-group=Die Socket-Binding-Gruppe, die derzeit zur Verwendung auf dem Host-Controller konfiguriert ist.
host.shutdown=Beendet Host und dessen Server
host.shutdown.suspend-timeout=Timeout in Sekunden, w\u00E4hrend dem gewartet wird, bis alle Dom\u00E4nenmodus-Server, die vom Ziel-Host verwaltet werden, angehalten werden, bevor das Herunterfahren fortgesetzt wird. Falls null (Standard), wird der Server sofort beendet. Ein Wert \u00FCber null bedeutet, dass der Server bis zu dieser Anzahl an Sekunden wartet, um alle aktiven Anfragen abzuschlie\u00DFen. Ein Wert unter null bedeutet, dass der Server unbegrenzt wartet, bis alle aktiven Anfragen abgeschlossen sind.
host.shutdown.restart=Falls 'true', wird der Host-Controller nach Beenden wieder neu gestartet
host.state=Der derzeitige Status des Host-Controllers; entweder STARTING, RUNNING oder RESTART_REQUIRED
host.primary=Ob dieser Host der prim\u00E4re Host f\u00FCr die Domain ist, d. h., ob dieser Prozess als Domain-Controller agiert.
host.resolve-expression-on-domain=Operation, die einen Ausdruck als Eingabe akzeptiert (oder einen String, der in einen Ausdruck umgewandelt werden kann) und diesen anhand der lokalen Systemeigenschaften und Umgebungsvariablen auf allen von diesem Host-Controller verwalteten Servern aufl\u00F6st.
host.resolve-expression-on-domain.expression=Der aufzul\u00F6sende Ausdruck.
host.resolve-expression-on-domain.reply=Der aufgel\u00F6ste Ausdruck oder die String-Form des urspr\u00FCnglichen Eingabewerts, falls dieser keinen Ausdruck repr\u00E4sentierte.
host.suspend-servers=H\u00E4lt Operationen auf allen Servern an, die von diesem Host Controller verwaltet werden. Alle aktuellen Operationen d\u00FCrfen abschlie\u00DFen, und neue Operationen werden abgelehnt.
host.suspend-servers.suspend-timeout=Timeout in Sekunden, w\u00E4hrend dem gewartet wird, bis alle Dom\u00E4nenmodus-Server, die vom Ziel-Host verwaltet werden, die Anhalte-Operation abschlie\u00DFen. Falls null (Standard), erfolgt eine sofortige R\u00FCckkehr der Operation. Ein Wert \u00FCber null bedeutet, dass die Operation mit der R\u00FCckkehr bis zu dieser Anzahl an Sekunden wartet, um Anfragen abzuschlie\u00DFen. Ein Wert unter null bedeutet, dass die Operation unendlich lange wartet, bis alle aktiven Anfragen abgeschlossen sind. Beachten Sie, dass die Operation nicht zur\u00FCckgesetzt wird, wenn der Timeout \u00FCberschritten wird. Es bedeutet lediglich, dass nicht alle aktuellen Anfragen im festgelegten Timeout abgeschlossen wurden.
host.resume-servers=Setzt die Verarbeitung auf allen Servern fort, die von diesem Host Controller verwaltet werden.
host.env=Die Host-Controller Umgebung.
host.env.process-controller-address=Die Adresse des Prozess-Controllers, mit dem dieser Host-Controller verbunden ist.
host.env.process-controller-port=Der Port des Prozess-Controllers, mit dem dieser Host-Controller verbunden ist.
host.env.host-controller-address=Die Adresse, die dieser Host-Controller zur Kommunikation mit dem Prozess-Controller verwendet. Dies ist unabh\u00E4ngig von der Kommunikation mit Management-Clients.
host.env.host-controller-port=Der Port, der dieser Host-Controller zur Kommunikation mit dem Prozess-Controller verwendet. Dies ist unabh\u00E4ngig von der Kommunikation mit Management-Clients.
host.env.home-dir=Das Home-Verzeichnis dieses Host-Controllers.
host.env.modules-dir=Das Verzeichnis, in dem die Module zu finden sind.
host.env.domain-base-dir=Das Basis-Verzeichnis der Domain.
host.env.domain-config-dir=Das Konfigurationsverzeichnis der Domain.
host.env.host-config-file=Die Konfigurationsdatei f\u00FCr diesen Host.
host.env.domain-config-file=Die Konfigurationsdatei f\u00FCr diese Domain.
host.env.domain-content-dir=Das Verzeichnis, in dem vom Server verwaltete Benutzerinhalte (z.B. Deployments) gespeichert werden.
host.env.domain-data-dir=Das Datenverzeichnis.
host.env.domain-log-dir=Das Verzeichnis, an das Protokolldateien geschickt werden.
host.env.domain-servers-dir=Das Verzeichnis, in dem die von diesem Host gestarteten Server ihre Laufzeitdaten speichern.
host.env.domain-temp-dir=Das tempor\u00E4re Verzeichnis.
host.env.default-jvm=Die Standard-jvm.
host.env.is-restart=Ob dieser Host vom Prozess-Controller neu gestartet wurde.
host.env.backup-domain-files=Ob dieser Host Controller die Domain-Inhalte vom Domain-Controller sichern sollte. Kann nur auf sekund\u00E4ren Host Controllern 'true' sein.
host.env.use-cached-dc=Ob dieser Host Controller beim Start des Hosts die gecachten Domain-Inhalte (zu erhalten durch Start mit --backup) verwenden soll. Kann nur auf sekund\u00E4ren Host Controllern 'true' sein.
host.env.initial-running-mode=Der initiale Ausf\u00FChrungsmodus des Hosts, als der Host Controller-Prozess gestartet wurde. Entweder NORMAL oder ADMIN_ONLY. Ein ADMIN_ONLY-Server startet s\u00E4mtliche konfigurierten Management-Interfaces und akzeptiert Management-Anfragen, startet jedoch keine Dienste zur Handhabung von Endbenutzeranfragen.
host.env.qualified-host-name=Der beim Start festgestellte voll qualifizierte Hostname.
host.env.host-name=Der beim Start festgestellte lokale Hostname.


host.reload=L\u00E4dt den Host-Controller neu, indem alle seine Dienste beendet und neu gestartet werden. Die JVM selbst wird nicht neu gestartet. Beachten Sie jedoch, dass dies zu einem umfassenden Neustart von allen Server-Prozessen f\u00FChrt, die von diesem Host-Controller verwaltet werden.
host.reload.admin-only=Ob der Host Controller beim Neustart im Ausf\u00FChrungsmodus ADMIN_ONLY gestartet werden soll. Ein ADMIN_ONLY Host Controller startet s\u00E4mtliche konfigurierten Verwaltungsoberfl\u00E4chen und akzeptiert Verwaltungsanfragen, startet jedoch keine Server und akzeptiert, falls dieser Host Controller der prim\u00E4re Host Controller f\u00FCr die Domain ist, keine eingehenden Verbindungen von sekund\u00E4ren Host Controllern.
host.reload.restart-servers=Falls 'true', werden die Server neu geladen, falls 'false', werden die Server weiter laufen gelassen und bei einem Neustart wieder mit dem Host-Controller verbunden.
host.reload.use-current-domain-config=Ist nur wirksam wenn --read-only-domain-config beim Start des Controllers festgelegt wurde. In diesem Fall wird, wenn der Parameter auf "false" eingestellt ist, die urspr\u00FCngliche Konfigurationsversion vom erneut geladenen Controller geladen; falls Null oder "true", so wird die aktuelle Runtime-Version des Modells verwendet.
host.reload.use-current-host-config=Ist nur wirksam wenn --read-only-host-config beim Start des Controllers festgelegt wurde. In diesem Fall wird, wenn der Parameter auf "false" eingestellt ist, die urspr\u00FCngliche Konfigurationsversion vom erneut geladenen Controller geladen; falls Null oder "true", so wird die aktuelle Runtime-Version des Modells verwendet.
host.reload.domain-config=Verwendet zum au\u00DFer Kraft setzen des Domain-Konfigurationsnamens, der f\u00FCr den neu geladenen Host-Controller verwendet werden soll. Wenn nach dem Neuladen \u00C4nderungen am Modell vorgenommen werden, dann werden diese \u00C4nderungen in die urspr\u00FCngliche Domain-Konfigurationsdatei persistiert, die beim erstmaligen Hochfahren des Host-Controllers verwendet wurde. Dieser Parameter wird analog aufgel\u00F6st zur --domain-config Befehlszeilenoption.
host.reload.host-config=Verwendet zum au\u00DFer Kraft setzen des Host-Konfigurationsnamens, der f\u00FCr den neu geladenen Host-Controller verwendet werden soll. Wenn nach dem Neuladen \u00C4nderungen am Modell vorgenommen werden, dann werden diese \u00C4nderungen in die urspr\u00FCngliche Host-Konfigurationsdatei persistiert, die beim erstmaligen Hochfahren des Host-Controllers verwendet wurde. Dieser Parameter wird analog aufgel\u00F6st zur --host-config Befehlszeilenoption.

server-config=Definiert einen Server im Management-Modell auf der Host-Ebene.
server-config.add=Hinzuf\u00FCgen einer neuen Serverkonfiguration.
server-config.remove=Entfernen einer bestehenden Serverkonfiguration.
server-config.interface=Eine Liste der voll spezifizierten benannten Netzwerk-Interfaces, die auf dem Server zur Verf\u00FCgung stehen.
server-config.jvm=Die Java Virtual Machine (jvm) Konfiguration zur Verwendung durch diesen Server.
server-config.name=Der Name des Servers.
server-config.group=Der Name einer Servergruppe vom Domain-Modell.
server-config.path=Eine Liste benannter Dateisystempfade.
server-config.priority=Veraltet. Nicht benutzt.
server-config.priority.deprecated=Nicht benutzt.
server-config.cpu-affinity=Veraltet. Nicht benutzt.
server-config.cpu-affinity.deprecated=Nicht benutzt.
server-config.socket-binding-group=Die Socket-Binding-Gruppe, zu der der Server geh\u00F6rt.
server-config.socket-binding-default-interface=Das standardm\u00E4\u00DFige Interface der Socket-Binding-Gruppe f\u00FCr diesen Server.
server-config.socket-binding-port-offset=Ein Offset, der auf die Port-Werte aufgeschlagen wird, die von der Socket-Binding-Gruppe f\u00FCr diesen Server angegeben sind.
server-config.auto-start=Ob dieser Server gestartet werden soll, wenn der Host-Controller gestartet.
server-config.status=Der aktuelle Status des Servers.
server-config.system-property=Eine Liste von an diesem Server einzustellenden Systemeigenschaften.
server-config.update-auto-start-with-server-status=Aktualisieren des auto-start Attributs mit dem Status des Servers.

server-config.ssl=SSL-Konfiguration f\u00FCr die Wiederverbindung der Server-Instanz mit deren Host-Controller.
server-config.ssl.loopback=SSL-Konfiguration f\u00FCr die Wiederverbindung der Server-Instanz mit deren Host-Controller.
server-config.ssl.loopback.add=Hinzuf\u00FCgen der SSL-Konfiguration f\u00FCr den Server.
server-config.ssl.loopback.remove=Entfernen der SSL-Konfiguration vom Server.
server-config.ssl.loopback.ssl-protocol=Das Protokoll zum Initialisieren des SSLContexts, falls "Default" angegeben ist, wird der standardm\u00E4\u00DFige SSLContext der JVM verwendet.
server-config.ssl.loopback.trust-manager-algorithm=Der Algorithmus zum Initialisieren der TrustManagerFactory, die zum Erhalt vom TrustManager[] zur \u00DCbergabe an den SSLContext verwendet wird; falls nicht angegeben, wird stattdessen der JVM-Standard verwendet.
server-config.ssl.loopback.truststore-type=Der Typ des Truststores
server-config.ssl.loopback.truststore-path=Der vollst\u00E4ndige Pfad des Truststores.
server-config.ssl.loopback.truststore-password=Das zum \u00D6ffnen des Truststores zu verwendende Passwort.

server=Die verwaltete Server-Instanz.
server.launch-type=Die Art, auf die der Server-Prozess gestartet wurde. Entweder "DOMAIN" f\u00FCr einen Server im Domain-Modus, gestartet von einem Host Controller, "STANDALONE" f\u00FCr einen eigenst\u00E4ndigen Server, gestartet von der Befehlszeile, oder "EMBEDDED" f\u00FCr einen eigenst\u00E4ndigen Server, gestartet als eingebetteter Teil einer Applikation, die in derselben virtuellen Maschine l\u00E4uft.
server.server-state=Der derzeitige Status des Server-Controllers
server.runtime-configuration-state=Der aktuelle, persistente Server-Konfigurationsstatus, entweder starting, ok, reload-required, restart-required, stopping oder stopped.

# Management
#host.core.management=Core management
host.core.management.native-interface=Konfiguration des nativen Management-Interface des Servers
host.core.management.native-interface.deprecated=Die Konfiguration des nativen Interface ist veraltet und wird aus zuk\u00FCnftigen Versionen ggf. entfernt.
host.core.management.native-interface.add=F\u00FCgt das native Management-Interface des Servers hinzu
host.core.management.native-interface.remove=Entfernt das native Management-Interface des Servers
host.core.management.native-interface.interface=Die Netzwerkschnittstelle, an dem das Socket des Host Controllers f\u00FCr native Management-Kommunikation ge\u00F6ffnet werden sollte.
host.core.management.native-interface.port=Der Port, an dem das Socket des Host Controllers f\u00FCr native Management-Kommunikation ge\u00F6ffnet werden sollte.
host.core.management.native-interface.ssl-context=Referenz zum SSLContext, der f\u00FCr dieses Management-Interface verwendet werden soll.
host.core.management.native-interface.security-realm=Der f\u00FCr das native Management-Interface zu verwendende Legacy-Sicherheitsbereich.
host.core.management.native-interface.security-realm.deprecated=Konfiguration sollte migriert werden und die Funktionen "sasl-authentication-factory" und "ssl-context" nach Bedarf referenzieren.
host.core.management.native-interface.sasl-authentication-factory=Die zu verwendende SASL-Authentifizierungsrichtlinie zur Sicherung dieses Interfaces.
host.core.management.native-interface.sasl-protocol=Der Name des an den SASL-Mechanismus zu gebenden Protokolln, das f\u00FCr die Authentifizierung verwendet wird.
host.core.management.native-interface.sasl-protocol.deprecated=Nur zur Verwendung mit Legacy-Sicherheitsbereichen.
host.core.management.native-interface.server-name=Der Name des Servers, der im ersten Remoting-Austausch und innerhalb des SASL-Mechanismus verwendet wird.
host.core.management.native-interface.server-name.deprecated=Nur zur Verwendung mit Legacy-Sicherheitsbereichen.
host.core.management.http-interface=Konfiguration des HTTP Management-Interface des Servers
host.core.management.http-interface.deprecated=Die Konfiguration des HTTP-Interface ist veraltet und wird aus zuk\u00FCnftigen Versionen ggf. entfernt.
host.core.management.http-interface.add=F\u00FCgt die Konfiguration des HTTP Management-Interface des Servers hinzu
host.core.management.http-interface.allowed-origins=Kommagetrennte Liste mit vertrauensw\u00FCrdigen Quellen zum Senden von Cross-Origin Resource Sharing Anfragen auf der Management-API, sobald der Benutzer authentifiziert ist.
host.core.management.http-interface.remove=F\u00FCgt die Konfiguration des HTTP Management-Interface des Servers hinzu
host.core.management.http-interface.interface=Die Netzwerkschnittstelle, an dem das Socket des Host Controllers f\u00FCr HTTP Management-Kommunikation ge\u00F6ffnet werden sollte.
host.core.management.http-interface.port=Der Port, an dem das Socket des Host Controllers f\u00FCr HTTP Management-Kommunikation ge\u00F6ffnet werden sollte.
host.core.management.http-interface.secure-interface=Die Netzwerkschnittstelle, an der das Host-Socket f\u00FCr HTTPS-Management-Kommunikation ge\u00F6ffnet werden soll, wenn eine andere Schnittstelle verwendet werden soll als die vom Attribut "interface" festgelegte. Falls nicht festgelegt, wird die vom Attribut "interface" festgelegte Schnittstelle verwendet. Falls mit einem anderen Wert als dem des Attributs "interface" festgelegt, werden Umleitungen von HTTPS-Anfragen, die am HTTP-Socket an die HTTPS-Adresse eingehen, nicht unterst\u00FCtzt. Wenn definiert, muss au\u00DFerdem "ssl-context" und/oder "security-realm" definiert werden.
host.core.management.http-interface.secure-port=Der Port, an dem das Socket des Host-Controllers f\u00FCr HTTPS-Management-Kommunikation ge\u00F6ffnet werden soll. Wenn definiert, muss au\u00DFerdem "ssl-context" und/oder "security-realm" definiert werden.
host.core.management.http-interface.http-authentication-factory=Die zu verwendende Authentifizierungsrichtlinie zur Sicherung des Interfaces f\u00FCr normale HTTP-Anfragen.
host.core.management.http-interface.ssl-context=Referenz zum SSLContext, der f\u00FCr dieses Management-Interface verwendet werden soll.
host.core.management.http-interface.security-realm=Der f\u00FCr das HTTP-Management-Interface zu verwendende Legacy-Sicherheitsbereich.
host.core.management.http-interface.security-realm.deprecated=Konfiguration sollte migriert werden und die Funktionen "http-authentication-factory", "sasl-authentication-factory" und "ssl-context" nach Bedarf referenzieren.
host.core.management.http-interface.console-enabled=Dieses Flag zeigt an, dass die Admin-Konsole aktiviert ist
host.core.management.http-interface.constant-headers=Der Satz von konstanten HTTP-Headern, die auf Antwortnachrichten angewendet werden sollen.
host.core.management.http-interface.constant-headers.headers=Die Header, die f\u00FCr den \u00FCbereinstimmenden Pfad gesetzt werden sollen.
host.core.management.http-interface.constant-headers.path=Das Pr\u00E4fix des Pfads, auf den die Header angewendet werden sollen.
host.core.management.http-interface.constant-headers.name=Der Name des festzulegenden HTTP-Headers.
host.core.management.http-interface.constant-headers.value=Der f\u00FCr den HTTP-Header festzulegende Wert.
host.core.management.http-interface.http-upgrade-enabled=Dieses Flag zeigt an, dass HTTP-Upgrade aktiviert ist, was es HTTP-Anfragen erm\u00F6glicht, auf native Remoting-Verbindungen hochgestuft zu werden
host.core.management.http-interface.http-upgrade-enabled.deprecated=Stattdessen http-upgrade.enabled verwenden
host.core.management.http-interface.http-upgrade=HTTP-Upgrade spezifische Konfiguration
host.core.management.http-interface.http-upgrade.enabled=Dieses Flag zeigt an, dass HTTP-Upgrade aktiviert ist, was es HTTP-Anfragen erm\u00F6glicht, auf native Remoting-Verbindungen hochgestuft zu werden
host.core.management.http-interface.http-upgrade.sasl-authentication-factory=Die serverseitige SASL-Authentifizierungsrichtlinie zur Sicherung des Interfaces nach dem HTTP-Upgrade der Verbindung.
host.core.management.http-interface.sasl-protocol=Der Name des an den SASL-Mechanismus zu gebenden Protokolln, das f\u00FCr die Authentifizierung verwendet wird.
host.core.management.http-interface.sasl-protocol.deprecated=Nur zur Verwendung mit Legacy-Sicherheitsbereichen.
host.core.management.http-interface.server-name=Der Name des Servers, der im ersten Remoting-Austausch und innerhalb des SASL-Mechanismus verwendet wird.
host.core.management.http-interface.server-name.deprecated=Nur zur Verwendung mit Legacy-Sicherheitsbereichen.

# Ignored resource
ignored-resources=Namen direkt untergeordneter Ressourcen der Domain-Root-Ressource, f\u00FCr die dieser Host Controller Anfragen ignorieren soll. Nur relevant auf einem sekund\u00E4ren Host Controller. Die Konfiguration dieser "ignorierten Ressourcen" kann einem Host Controller eines fr\u00FCheren Release dabei helfen, als sekund\u00E4rer Host Controller f\u00FCr einen Domain-Controller eines sp\u00E4teren Release zu dienen, indem dem sekund\u00E4ren Host Controller erm\u00F6glicht wird, diejenigen Teile der Konfiguration zu ignorieren, die seine Softwareversion nicht verstehen kann. Diese Strategie kann nur dann erfolgreich sein, wenn die Server, die vom sekund\u00E4ren Host Controller verwaltet werden, nicht die ignorierten Teile der Konfiguration referenzieren.
ignored-resource-type=Identifiziert einen Ressourcentyp (z.B. 'profile' oder 'socket-binding-group'), von denen bestimmte Instanzen ignoriert werden sollen.
ignored-resource-type.add=F\u00FCgt einen Ressourcentyp hinzu, von dem bestimmte Instanzen ignoriert werden sollen.
ignored-resource-type.remove=Entfernt einen Ressourcentyp aus der Gruppe jener, von denen bestimmte Instanzen ignoriert werden sollen.
ignored-resource-type.names=Eine Liste von Namen spezifischer Instanzen dieses Ressourcentyps, die ignoriert werden sollen. Die Angabe von '*' in der Liste bedeutet, dass alle Ressourcen dieses Typs ignoriert werden sollen.
ignored-resource-type.wildcard=Eine boolesche Variable; falls 'true', werden alle Ressourcen dieses Typs ignoriert.

# JVMs
jvm=Die JVM-Konfiguration f\u00FCr verwaltete Prozesse / Server.
jvm.add=Eine neue JVM-Konfiguration hinzuf\u00FCgen.
jvm.remove=Eine bestehende JVM-Konfiguration entfernen.
jvm.name=Der Name der JVM-Konfiguration.
jvm.heap-size=Die anf\u00E4ngliche durch die JVM zugeordnete Heap-Gr\u00F6\u00DFe.
jvm.max-heap-size=Die maximale Heap-Gr\u00F6\u00DFe, die von der JVM zugeordnet werden kann.
jvm.permgen-size=Die anf\u00E4ngliche Permanent-Generation Gr\u00F6\u00DFe.
jvm.permgen-size.deprecated=Die JVM bietet keinen separaten Permanent-Generation-Bereich mehr.
jvm.max-permgen-size=Die maximale Gr\u00F6\u00DFe der Permanent-Generation.
jvm.max-permgen-size.deprecated=Die JVM bietet keinen separaten Permanent-Generation-Bereich mehr.
jvm.stack-size=Die JVM Stack-Gr\u00F6\u00DFe Einstellungen.
jvm.agent-lib=Die JVM agent-lib.
jvm.agent-path=Der JVM agent Pfad.
jvm.java-agent=Der Java agent
jvm.jvm-options=Die JVM Optionen.
jvm.add-jvm-option=Hinzuf\u00FCgen einer jvm-Option.
jvm.add-jvm-option.jvm-option=Eine JVM-Option.
jvm.remove-jvm-option=Entfernen einer jvm-Option.
jvm.remove-jvm-option.jvm-option=Eine JVM-Option.
jvm.environment-variables=Die JVM Umgebungsvariablen.
jvm.launch-command=Befehl als Pr\u00E4fix zur JVM beim Start.
jvm.module-options=Die Optionen, die beim Booten des Servers an JBoss Modules \u00FCbergeben werden. Wenn ein -javaent: in den Moduloptionen definiert ist, wird die jboss-modules.jar automatisch als Java-Agent hinzugef\u00FCgt.
#jvm.system.properties=The JVM system properties.
jvm.java-home=Das java_home
jvm.type=Die JVM Type kann entweder SUN oder IBM sein
jvm.debug-enabled=Boolean Wert, der angibt, ob Debug aktiviert ist.
jvm.debug-options=Die Debug Optionen.
jvm.env-classpath-ignored=Ignoriere den Umgebungs-classpath.
jvm.environment-variable.add=Eine JVM Umgebungsvariable hinzuf\u00FCgen.
jvm.environment-variable.remove=Eine JVM Umgebungsvariable entfernen.
jvm.environment-variable.name=Der Name der JVM Umgebungsvariable.
jvm.environment-variable.value=Der Wert der JVM Umgebungsvariable.

# Discovery options
discovery-options=Eine Liste von Domain-Controller Discovery-Optionen.
discovery-options.discovery-options=Die geordnete Liste von Domain-Controller Discovery-Optionen.
discovery-options.discovery-options.deprecated=Das Attribut wurde aus Kompatibilit\u00E4tsgr\u00FCnden noch bewahrt, stattdessen sollte jetzt das options-Attribut verwendet werden.
discovery-options.discovery-option=Eine Liste von Domain-Controller Discovery-Optionen.
discovery-option=Eine Domain-Controller Discovery-Option.
discovery-option.name=Der Name f\u00FCr diese Domain-Controller Discovery-Option.
discovery-option.code=Der vollst\u00E4ndige Klassenname der DiscoveryOption-Implementierung
discovery-option.module=Das Modul, aus dem die DiscoveryOption-Implementierung geladen werden soll. Falls nicht angegeben, muss die DiscoveryOption-Implementierung vom Host Controllers eigenen Modul verf\u00FCgbar sein.
discovery-option.properties=Die Properties der Domain-Controller Discovery-Option.
discovery-option.add=F\u00FCgt die Konfiguration f\u00FCr eine Domain-Controller Discovery-Option hinzu.
discovery-option.remove=Entfernt die Konfiguration f\u00FCr eine Domain-Controller Discovery-Option.
discovery-options.static-discovery=Eine Liste von statischen Domain-Controller Discovery-Optionen.
static-discovery=Eine statische Domain-Controller Discovery-Option.
static-discovery.name=Der Name f\u00FCr diese statische Domain-Controller Discovery-Option.
static-discovery.host=Der Hostname des Remote Domain Controller.
static-discovery.port=Die Portnummer des Remote Domain Controller.
static-discovery.protocol=Das Protokoll des Remote Domain Controller.
static-discovery.add=F\u00FCgt die Konfiguration f\u00FCr eine statische Domain-Controller Discovery-Option hinzu.
static-discovery.remove=Entfernt die Konfiguration f\u00FCr eine statische Domain-Controller Discovery-Option.
discovery-options.options=Die geordnete Liste von Domain-Controller Discovery-Optionen.
discovery-options.options.name=Der Name f\u00FCr diese Domain-Controller Discovery-Option.
discovery-options.options.code=Der vollst\u00E4ndige Klassenname der DiscoveryOption-Implementierung
discovery-options.options.module=Das Modul aus dem die DiscoveryOption-Implementierung geladen werden soll.
discovery-options.options.properties=Die Properties der Domain-Controller Discovery-Option.
discovery-options.options.custom-discovery=Eine Domain-Controller Discovery-Option.
discovery-options.options.static-discovery=Eine statische Domain-Controller Discovery-Option.
discovery-options.options.host=Der Hostname des Remote Domain Controller.
discovery-options.options.port=Die Portnummer des Remote Domain Controller.
discovery-options.options.protocol=Das Protokoll des Remote Domain Controller.

